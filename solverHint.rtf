{\rtf1\ansi\ansicpg1252\cocoartf2511
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red255\green255\blue255;
}
{\*\expandedcolortbl;;\cssrgb\c0\c1\c1;\cssrgb\c100000\c100000\c99985\c0;\cssrgb\c100000\c100000\c99941;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
package elementary;\
import java.io.BufferedReader;\
import java.io.FileNotFoundException;\
import java.io.FileReader;\
import java.io.IOException;\
import java.io.ObjectInputStream.GetField;\
\
public class Sudoku \{\
\
	static int iterations = 10;\
\
	static int[][] field = new int[9][9]; // [row][column]\
	static int[][][] possibility = new int[9][9][9]; // [row][column][possible\
														// values]\
\
	// field[2][3] = 0 means no number at field in row 3 and column 4\
	// possible values [0,0,1,0,1,0,1,1,0] means 3,5,7,8 in dem Feld noch\
	// m\'f6glich\
\
	public static void main(String[] args) \{\
		readFile();\
		System.out.println("- - - - - - - - -");\
		System.out.println("Input:");\
		System.out.println("- - - - - - - - -");\
		show(field);\
		System.out.println("- - - - - - - - -");\
		for (int i = 0; i < iterations; i++) \{\
			restrictPossibilities();\
		\}\
		System.out.println("M\'f6glichkeiten:");\
		System.out.println("- - - - - - - - -");\
		showPossibilities(possibility);\
		System.out.println("- - - - - - - - -");\
		for (int i = 0; i < iterations; i++) \{\
			searchInPossibilities();\
		\}\
		System.out.println("Ergebnis:");\
		System.out.println("- - - - - - - - -");\
		show(field);\
	\}\
\
	static void restrictPossibilities() \{\
		for (int k = 0; k < 9; k++) \{\
			for (int l = 0; l < 9; l++) \{\
				if (field[k][l] == 0) \{\
					restrictPossibilities(k,l);\
				\}\
			\}\
		\}\
	\}\
\
	static void searchInPossibilities() \{\
		for (int i = 0; i < 9; i++)\
			for (int j = 0; j < 9; j++) \{\
				if (!isDetermined(i,j))\
					searchInPossibilities(i,j);\
			\}\
	\}\
\
	static void searchInPossibilities(int i, int j) \{\
		int count = 0;\
		// horizontal:\
		for (int k = 0; k < 9; k++) \{  // k+1 = m\'f6glicher Wert (possibility) bei (i,j)\
			if (possibility[i][j][k] == 1) \{\
				count = 0;\
				for (int l = 0; l < 9; l++) \{\
					if (l != j)\
						if (possibility[i][l][k] == 1) count++;\
				\}\
				if (count == 0) \{\
					field[i][j] = k+1;\
					for (int m = 0; m < 9; m++) \{\
						if (m == k)\
							possibility[i][j][m] = 1;\
						else\
							possibility[i][j][m] = 0;\
					\}\
					restrictPossibilities();\
					return;\
				\}\
			\}\
		\}\
		// vertikal:\
		for (int k = 0; k < 9; k++) \{  // k+1 = m\'f6glicher Wert (possibility) bei (i,j)\
			if (possibility[i][j][k] == 1) \{\
				count = 0;\
				for (int l = 0; l < 9; l++) \{\
					if (l != i)\
						if (possibility[l][j][k] == 1)	count++;\
				\}\
				if (count == 0) \{\
					field[i][j] = k+1;\
					for (int m = 0; m < 9; m++) \{\
						if (m == k)\
							possibility[i][j][m] = 1;\
						else\
							possibility[i][j][m] = 0;\
					\}\
					restrictPossibilities();\
					return;\
				\}\
			\}\
		\}\
		// quadratisch:\
		int[][] square = getFieldsInSquare(i,j);\
		for (int k = 0; k < 9; k++) \{  // k+1 = m\'f6glicher Wert (possibility) bei (i,j)\
			if (possibility[i][j][k] == 1) \{\
				count = 0;\
				for (int m = 0; m < 9; m++) \{\
					for (int n = 0; n < 9; n++)\
					if (square[m][n] != 0)\
						if (possibility[m][n][k] == 1)	count++;\
				\}\
				if (count == 0) \{\
					field[i][j] = k+1;\
					for (int p = 0; p < 9; p++) \{\
						if (p == k)\
							possibility[i][j][p] = 1;\
						else\
							possibility[i][j][p] = 0;\
					\}\
					restrictPossibilities();\
					return;\
				\}\
			\}\
		\}\
	\}\
\
	static int[][] getFieldsInSquare(int i, int j) \{\
		int[][] result = new int[9][9];\
		if (0 <= i && i < 3) \{\
			if (0 <= j && j < 3)\
				for (int k = 0; k < 3; k++)\
					for (int l = 0; l < 3; l++)\
						result[k][l] = 1;\
			if (3 <= j && j < 6)\
				for (int k = 0; k < 3; k++)\
					for (int l = 3; l < 6; l++)\
						result[k][l] = 1;\
			if (6 <= j && j < 9)\
				for (int k = 0; k < 3; k++)\
					for (int l = 6; l < 9; l++)\
						result[k][l] = 1;\
		\}\
		if (3 <= i && i < 6) \{\
			if (0 <= j && j < 3)\
				for (int k = 3; k < 6; k++)\
					for (int l = 0; l < 3; l++)\
						result[k][l] = 1;\
			if (3 <= j && j < 6)\
				for (int k = 3; k < 6; k++)\
					for (int l = 3; l < 6; l++)\
						result[k][l] = 1;\
			if (6 <= j && j < 9)\
				for (int k = 3; k < 6; k++)\
					for (int l = 6; l < 9; l++)\
						result[k][l] = 1;\
		\}\
		if (6 <= i && i < 9) \{\
			if (0 <= j && j < 3)\
				for (int k = 6; k < 9; k++)\
					for (int l = 0; l < 3; l++)\
						result[k][l] = 1;\
			if (3 <= j && j < 6)\
				for (int k = 6; k < 9; k++)\
					for (int l = 3; l < 6; l++)\
						result[k][l] = 1;\
			if (6 <= j && j < 9)\
				for (int k = 6; k < 9; k++)\
					for (int l = 6; l < 9; l++)\
						result[k][l] = 1;\
		\}\
		result[i][j] = 0;  // Das Feld selbst geh\'f6rt nicht zur Konkurrenz\
		return result;\
	\}\
\
\
	static void restrictPossibilities(int i, int j) \{\
		if (isDetermined(i,j)) return;\
		int[][] comp = getCompetitors(i,j);\
		for (int k = 0; k < 9; k++) \{\
			for (int l = 0; l < 9; l++) \{\
				if (comp[k][l] == 0) continue;\
				if (isDetermined(k,l))\
					possibility[i][j][field[k][l]-1] = 0;\
			\}\
		\}\
		if (isDetermined(i,j))\
			field[i][j] = getFieldFromPossibility(i,j);\
	\}\
\
	static int getFieldFromPossibility(int i, int j) \{\
		int result = 0;\
		for (int k = 0; k < 9; k++)\
			if (possibility[i][j][k] == 1) \{\
				result = k + 1;\
			\}\
		return result;\
	\}\
\
	static boolean isDetermined(int i, int j) \{\
		int count = 0;\
		for (int k = 0; k < 9; k++) \{\
			if (possibility[i][j][k] == 1)\
				count++;\
		\}\
		if (count == 1)\
			return true;\
		return false;\
	\}\
\
	static void readFile() \{\
		try \{\
			FileReader fr = new FileReader("sudoku.txt");\
			BufferedReader br = new BufferedReader(fr);\
			String s = null;\
			int i = 0;\
			while ((s = br.readLine()) != null) \{\
				String[] ints = s.split(" ");\
				for (int j = 0; j < 9; j++) \{\
					int nb = Integer.parseInt(ints[j]);\
					if (nb == 0) \{\
						for (int k = 0; k < 9; k++) \{\
							possibility[i][j][k] = 1; // alle noch m\'f6glich\
						\}\
					\} else \{\
						field[i][j] = nb;\
						possibility[i][j][nb - 1] = 1; // nur noch ein Wert\
													  // m\'f6glich: nb\
					\}\
				\}\
				i++;\
			\}\
			fr.close();\
		\} catch (Exception e) \{\
			e.printStackTrace();\
		\}\
	\}\
\
	static int[][] getCompetitors(int i, int j) \{\
		// liefert 1, falls (k,l) zur horizontalen, vertikalen oder\
		// quadratischen Gruppe von (i,j) geh\'f6rt\
		int[][] result = new int[9][9];\
		// horizontal:\
		for (int k = 0; k < 9; k++) \{\
			result[i][k] = 1;\
		\}\
		// vertikal:\
		for (int l = 0; l < 9; l++) \{\
			result[l][j] = 1;\
		\}\
		// quadrat:\
		if (0 <= i && i < 3) \{\
			if (0 <= j && j < 3)\
				for (int k = 0; k < 3; k++)\
					for (int l = 0; l < 3; l++)\
						result[k][l] = 1;\
			if (3 <= j && j < 6)\
				for (int k = 0; k < 3; k++)\
					for (int l = 3; l < 6; l++)\
						result[k][l] = 1;\
			if (6 <= j && j < 9)\
				for (int k = 0; k < 3; k++)\
					for (int l = 6; l < 9; l++)\
						result[k][l] = 1;\
		\}\
		if (3 <= i && i < 6) \{\
			if (0 <= j && j < 3)\
				for (int k = 3; k < 6; k++)\
					for (int l = 0; l < 3; l++)\
						result[k][l] = 1;\
			if (3 <= j && j < 6)\
				for (int k = 3; k < 6; k++)\
					for (int l = 3; l < 6; l++)\
						result[k][l] = 1;\
			if (6 <= j && j < 9)\
				for (int k = 3; k < 6; k++)\
					for (int l = 6; l < 9; l++)\
						result[k][l] = 1;\
		\}\
		if (6 <= i && i < 9) \{\
			if (0 <= j && j < 3)\
				for (int k = 6; k < 9; k++)\
					for (int l = 0; l < 3; l++)\
						result[k][l] = 1;\
			if (3 <= j && j < 6)\
				for (int k = 6; k < 9; k++)\
					for (int l = 3; l < 6; l++)\
						result[k][l] = 1;\
			if (6 <= j && j < 9)\
				for (int k = 6; k < 9; k++)\
					for (int l = 6; l < 9; l++)\
						result[k][l] = 1;\
		\}\
		result[i][j] = 0;  // Das Feld selbst geh\'f6rt nicht zur Konkurrenz\
		return result;\
	\}\
\
	static void show(int[][] field) \{\
		for (int k = 0; k < 9; k++) \{\
			for (int l = 0; l < 9; l++) \{\
				System.out.print(field[k][l] + " ");;\
			\}\
			System.out.println("");\
		\}\
	\}\
\
	static void showPossibilities(int[][][] possibilities) \{\
		for (int i = 0; i < 9; i++) \{\
			for (int j = 0; j < 9; j++) \{\
				for (int k = 0; k < 9; k++) \{\
					if (possibilities[i][j][k] == 1)\
						System.out.print(k+1);\
				\}\
				System.out.print("\\t");\
			\}\
			System.out.println("");\
		\}\
	\}\
\}\
\
}